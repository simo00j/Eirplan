[{"/home/thomas/enseirb/i2/pfa/free-PFA/react-frontend/src/index.js":"1","/home/thomas/enseirb/i2/pfa/free-PFA/react-frontend/src/reportWebVitals.js":"2","/home/thomas/enseirb/i2/pfa/free-PFA/react-frontend/src/search.js":"3","/home/thomas/enseirb/i2/pfa/free-PFA/react-frontend/src/svg.js":"4"},{"size":507,"mtime":1615481205520,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1615477394616,"results":"7","hashOfConfig":"6"},{"size":4387,"mtime":1615490149204,"results":"8","hashOfConfig":"6"},{"size":6280,"mtime":1615477394620,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"brgn8f",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"/home/thomas/enseirb/i2/pfa/free-PFA/react-frontend/src/index.js",[],["20","21"],"/home/thomas/enseirb/i2/pfa/free-PFA/react-frontend/src/reportWebVitals.js",[],"/home/thomas/enseirb/i2/pfa/free-PFA/react-frontend/src/search.js",["22","23","24","25","26","27"],"import React, { Component } from 'react';\nimport Plan from './svg.js';\nimport Keyboard from \"react-simple-keyboard\";\nimport 'react-simple-keyboard/build/css/index.css';\nimport { faAngleDown, faAngleUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\n\nclass List extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      plan: Plan,\n      companies: [],\n      notfound:false,\n      search: false,\n      keywords : [],\n      list_kw : false,\n      card : false,\n      company : {}\n    };\n  this.kwords()\n  }\n\n\n  changeColor(idr) {\n    var elem = document.getElementById(idr);\n    if(elem != null){\n    if(elem.style.fill != \"pink\"){\n    elem.style.fill= \"pink\";}\n    else {\n      elem.style.fill= \"red\"}\n    }\n    }\n\n  inputkeyword(name){\n    if(name!= \"\"){\n      if(this.state.companies.length == 0) {\n        this.setState({\n          notfound: true});}\n    fetch(`http://localhost:3001/companies/list/search/${name}`)\n      .then(response => response.json())\n      .then(responseJson => {\n        this.setState({ companies: responseJson.data });\n          if(this.state.companies.length != 0) {\n        this.setState({ notfound: false, search:true});}\n        else {\n          this.setState({ notfound: true, search: false});}\n      });\n    }\n  };\n\n\n  kwords(){\n    fetch(\"http://localhost:3001/companies/keywords\")\n    .then(response => response.json())\n    .then(responseJson => {\n      this.setState({ keywords: responseJson.data });\n      this.setState({ list_kw: true });\n    });\n}\n\nshowCard(id){\n  this.changeColor(id);\n  fetch(`http://localhost:3001/companies/list/${id}`)\n    .then(response => response.json())\n    .then(responseJson => {\n      this.setState({ company: responseJson.data,\n        card: true,\n        list_kw : false,\n        search : false, });\n    });\n};\n\nbackfunc(id){\n  this.changeColor(id);\n  this.setState({ card: false,\n    list_kw : true,\n    search : true, })\n}\n\nonChange(input) {\n  document.getElementById(\"rechercher\").value = input;\n  console.log(\"Input changed\", input);\n}\n\n  render(){\n    return <div className = \"container\">\n      <h1> Nom du salon </h1>\n      <div className=\"btn-group-vertical\">\n        <div class=\"btn btn-dark\" href=\"#\"><FontAwesomeIcon icon={faAngleUp} size=\"2x\"/></div>\n        <div class=\"btn btn-dark\" href=\"#\"><FontAwesomeIcon icon={faAngleDown} size=\"2x\"/></div>\n      </div>\n    <div className = \"row justify-content-center\">\n      <Plan />\n    </div>\n    <div className = \"row justify-content-center\">\n    <input type=\"text\"\n    id=\"rechercher\"\n    className=\"input\"\n    placeholder=\"Search...\"\n      />\n    <div onClick={() => this.inputkeyword(document.getElementById(\"rechercher\").value)} className=\"btn btn-primary\">\n    Search\n    </div>\n    </div>\n    <div className = \"row justify-content-center text-center\">\n    {this.state.list_kw ? (\n      <div className=\"list\">\n        <h3> Mots-clés</h3>\n        {this.state.keywords.map(keywords => (\n          <li\n          onClick={() => (document.getElementById(\"rechercher\").value = keywords, this.inputkeyword(keywords))}\n          className=\"btn btn-outline-success\"\n          >\n          {keywords}\n          </li>\n      ))}\n      </div>\n    ): null}\n    </div>\n<div className = \"row justify-content-center\">\n  {this.state.notfound ? (\n    <h5> Aucun résultat </h5>\n  ): null}\n  {this.state.search ? (\n    <div className=\"list-group\">\n      <h5> Résultat de recherche pour {document.getElementById(\"rechercher\").value} </h5>\n      {this.state.companies.map(companies => (\n        <li\n        onClick={() => this.showCard(companies._id)}\n        className=\"list-group-item list-group-item-action\"\n        >\n        {companies.name}\n        </li>\n      ))}\n   </div>\n  ): null}\n  {this.state.card ? (\n  <div className=\"card\" style={{ width: \"18rem\" }}>\n    <div className=\"card-body\">\n      <h5 className=\"card-title\">{this.state.company.name}</h5>\n      <div className=\"list-group\">\n      {this.state.company.keywords.map(kw =>(\n        <li>{kw}</li>\n      )\n      )}\n      </div>\n      <div onClick={() => this.backfunc(this.state.company._id)} className=\"btn btn-primary\">\n        Back\n      </div>\n    </div>\n  </div>\n  ) :null}\n </div>\n <div id=\"keyyboard\"> \n   <Keyboard onChange={input => this.onChange(input)} />\n </div>\n\n </div>\n  }\n}\n\n\nexport default List;","/home/thomas/enseirb/i2/pfa/free-PFA/react-frontend/src/svg.js",[],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":1,"column":17,"nodeType":"34","messageId":"35","endLine":1,"endColumn":26},{"ruleId":"36","severity":1,"message":"37","line":30,"column":24,"nodeType":"38","messageId":"39","endLine":30,"endColumn":26},{"ruleId":"36","severity":1,"message":"37","line":38,"column":12,"nodeType":"38","messageId":"39","endLine":38,"endColumn":14},{"ruleId":"36","severity":1,"message":"40","line":39,"column":38,"nodeType":"38","messageId":"39","endLine":39,"endColumn":40},{"ruleId":"36","severity":1,"message":"37","line":46,"column":42,"nodeType":"38","messageId":"39","endLine":46,"endColumn":44},{"ruleId":"41","severity":1,"message":"42","line":114,"column":81,"nodeType":"43","messageId":"44","endLine":114,"endColumn":82},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-global-assign","no-unsafe-negation"]