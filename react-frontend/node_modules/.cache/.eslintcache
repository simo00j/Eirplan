[{"/home/emma/Documents/I2/pfa/free-PFA/react-frontend/src/index.js":"1","/home/emma/Documents/I2/pfa/free-PFA/react-frontend/src/reportWebVitals.js":"2","/home/emma/Documents/I2/pfa/free-PFA/react-frontend/src/search.js":"3","/home/emma/Documents/I2/pfa/free-PFA/react-frontend/src/svg.js":"4"},{"size":541,"mtime":1614874091626,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1612803083180,"results":"7","hashOfConfig":"6"},{"size":3056,"mtime":1614884476699,"results":"8","hashOfConfig":"6"},{"size":214,"mtime":1614884862857,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"pwlv1o",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/emma/Documents/I2/pfa/free-PFA/react-frontend/src/index.js",[],["20","21"],"/home/emma/Documents/I2/pfa/free-PFA/react-frontend/src/reportWebVitals.js",[],"/home/emma/Documents/I2/pfa/free-PFA/react-frontend/src/search.js",["22","23","24","25","26"],"import React, { Component } from 'react';\n\n\n\nclass List extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      companies: [],\n      notfound:false,\n      search: false,\n      keywords : [],\n      list_kw : false,\n      card : false, \n      company : {}\n    };        \n  this.kwords()\n  }\n\n\n\n  inputkeyword(name){\n    if(name!= \"\"){\n      if(this.state.companies.length == 0) {\n        this.setState({\n          notfound: true});}\n    fetch(`http://localhost:3001/companies/list/search/${name}`)\n      .then(response => response.json())\n      .then(responseJson => {\n        this.setState({ companies: responseJson.data });\n          if(this.state.companies.length != 0) {\n        this.setState({ notfound: false, search:true});}\n        else {\n          this.setState({ notfound: true, search: false});}\n      });\n    }\n  };\n\n\n  kwords(){\n    fetch(\"http://localhost:3001/companies/keywords\")\n    .then(response => response.json())\n    .then(responseJson => {\n      this.setState({ keywords: responseJson.data });\n      this.setState({ list_kw: true });\n    });\n}\n   \nshowCard(id){\n  fetch(`http://localhost:3001/companies/list/${id}`)\n    .then(response => response.json())\n    .then(responseJson => {\n      this.setState({ company: responseJson.data, \n        card: true,\n        list_kw : false,\n        search : false, });\n    });\n};\n\n  render(){\n    return <div className=\"container\">\n    <input type=\"text\"\n    id=\"rechercher\"\n    className=\"input\"\n    placeholder=\"Search...\" \n      />\n    <div onClick={() => this.inputkeyword(document.getElementById(\"rechercher\").value)} className=\"btn btn-primary\">\n    Search\n    </div>\n    {this.state.list_kw ? (\n      <div className=\"list\">\n        <h3> Mots-clés</h3>\n        {this.state.keywords.map(keywords => (\n          <li\n          onClick={() => (document.getElementById(\"rechercher\").value = keywords, this.inputkeyword(keywords))}\n          className=\"btn btn-outline-success\"\n          >\n          {keywords}  \n          </li>\n      ))} \n      </div>\n    ): null}\n  {this.state.notfound ? (\n    <h5> Aucun résultat </h5>\n  ): null}\n  {this.state.search ? (\n    <div className=\"list-group\">\n      <h5> Résultat de recherche pour {document.getElementById(\"rechercher\").value} </h5> \n      {this.state.companies.map(companies => (\n        <li\n        onClick={() => this.showCard(companies._id)}\n        className=\"list-group-item list-group-item-action\"\n        >\n        {companies.name}\n        </li>\n      ))}\n   </div>\n  ): null}\n  {this.state.card ? (\n  <div class=\"card\" style={{ width: \"18rem\" }}>\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">{this.state.company.name}</h5>\n      <div className=\"list-group\">\n      {this.state.keywords.map(keywords => (\n      <li class=\"list-group\">{keywords}</li>))}\n      </div>\n      <div onClick={() => this.setState({ card: false,\n        list_kw : true,\n        search : true, })} class=\"btn btn-primary\">\n        Back\n      </div>\n    </div>\n  </div>\n  ) : null}\n</div>\n  }\n}\n\nexport default List;\n","/home/emma/Documents/I2/pfa/free-PFA/react-frontend/src/svg.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":1,"column":17,"nodeType":"33","messageId":"34","endLine":1,"endColumn":26},{"ruleId":"35","severity":1,"message":"36","line":24,"column":12,"nodeType":"37","messageId":"38","endLine":24,"endColumn":14},{"ruleId":"35","severity":1,"message":"39","line":25,"column":38,"nodeType":"37","messageId":"38","endLine":25,"endColumn":40},{"ruleId":"35","severity":1,"message":"36","line":32,"column":42,"nodeType":"37","messageId":"38","endLine":32,"endColumn":44},{"ruleId":"40","severity":1,"message":"41","line":76,"column":81,"nodeType":"42","messageId":"43","endLine":76,"endColumn":82},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-global-assign","no-unsafe-negation"]