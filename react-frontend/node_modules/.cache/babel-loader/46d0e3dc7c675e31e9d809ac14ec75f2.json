{"ast":null,"code":"var _jsxFileName = \"/home/emma/Documents/I2/pfa/free-PFA/react-frontend/src/search.js\";\nimport React, { Component } from 'react';\nimport Plan from './svg.js';\nimport App from './svg.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction changeColor(idr) {\n  var elem = document.getElementById(idr);\n\n  if (elem != null) {\n    if (elem.style.fill == \"red\") {\n      elem.style.fill = 'green';\n    } else {\n      elem.style.fill = 'red';\n    }\n  }\n}\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      plan: Plan,\n      companies: [],\n      notfound: false,\n      search: false,\n      keywords: [],\n      list_kw: false,\n      card: false,\n      company: {}\n    };\n    this.kwords();\n  }\n\n  inputkeyword(name) {\n    if (name != \"\") {\n      if (this.state.companies.length == 0) {\n        this.setState({\n          notfound: true\n        });\n      }\n\n      fetch(`http://localhost:3001/companies/list/search/${name}`).then(response => response.json()).then(responseJson => {\n        this.setState({\n          companies: responseJson.data\n        });\n\n        if (this.state.companies.length != 0) {\n          this.setState({\n            notfound: false,\n            search: true\n          });\n        } else {\n          this.setState({\n            notfound: true,\n            search: false\n          });\n        }\n      });\n    }\n  }\n\n  kwords() {\n    fetch(\"http://localhost:3001/companies/keywords\").then(response => response.json()).then(responseJson => {\n      this.setState({\n        keywords: responseJson.data\n      });\n      this.setState({\n        list_kw: true\n      });\n    });\n  }\n\n  showCard(id) {\n    changeColor(id);\n    fetch(`http://localhost:3001/companies/list/${id}`).then(response => response.json()).then(responseJson => {\n      this.setState({\n        company: responseJson.data,\n        card: true,\n        list_kw: false,\n        search: false\n      });\n    });\n  }\n\n  backfunc(id) {\n    changeColor(id);\n    this.setState({\n      card: false,\n      list_kw: true,\n      search: true\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row justify-content-center\",\n        children: [/*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"rechercher\",\n          className: \"input\",\n          placeholder: \"Search...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => this.inputkeyword(document.getElementById(\"rechercher\").value),\n          className: \"btn btn-primary\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row justify-content-center text-center\",\n        children: this.state.list_kw ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \" Mots-cl\\xE9s\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 9\n          }, this), this.state.keywords.map(keywords => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => (document.getElementById(\"rechercher\").value = keywords, this.inputkeyword(keywords)),\n            className: \"btn btn-outline-success\",\n            children: keywords\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 11\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 7\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row justify-content-center\",\n        children: [this.state.notfound ? /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \" Aucun r\\xE9sultat \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 5\n        }, this) : null, this.state.search ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\" R\\xE9sultat de recherche pour \", document.getElementById(\"rechercher\").value, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 7\n          }, this), this.state.companies.map(companies => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => this.showCard(companies._id),\n            className: \"list-group-item list-group-item-action\",\n            children: companies.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 9\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 5\n        }, this) : null, this.state.card ? /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card\",\n          style: {\n            width: \"18rem\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              class: \"card-title\",\n              children: this.state.company.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"list-group\",\n              children: this.state.company.keywords.map(kw => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: kw\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 9\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => this.backfunc(this.state.company._id),\n              class: \"btn btn-primary\",\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 3\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default List;","map":{"version":3,"sources":["/home/emma/Documents/I2/pfa/free-PFA/react-frontend/src/search.js"],"names":["React","Component","Plan","App","changeColor","idr","elem","document","getElementById","style","fill","List","constructor","props","state","plan","companies","notfound","search","keywords","list_kw","card","company","kwords","inputkeyword","name","length","setState","fetch","then","response","json","responseJson","data","showCard","id","backfunc","render","value","map","_id","width","kw"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Plan from './svg.js'\nimport App from './svg.js'\n\n\nfunction changeColor(idr) {\n  var elem = document.getElementById(idr);\n  if(elem != null){\n  if(elem.style.fill == \"red\"){\n  elem.style.fill= 'green';}\n  else {\n    elem.style.fill= 'red';}\n  }\n  }\nclass List extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      plan: Plan,\n      companies: [],\n      notfound:false,\n      search: false,\n      keywords : [],\n      list_kw : false,\n      card : false,\n      company : {}\n    };\n  this.kwords()\n  }\n\n\n\n  inputkeyword(name){\n    if(name!= \"\"){\n      if(this.state.companies.length == 0) {\n        this.setState({\n          notfound: true});}\n    fetch(`http://localhost:3001/companies/list/search/${name}`)\n      .then(response => response.json())\n      .then(responseJson => {\n        this.setState({ companies: responseJson.data });\n          if(this.state.companies.length != 0) {\n        this.setState({ notfound: false, search:true});}\n        else {\n          this.setState({ notfound: true, search: false});}\n      });\n    }\n  };\n\n\n  kwords(){\n    fetch(\"http://localhost:3001/companies/keywords\")\n    .then(response => response.json())\n    .then(responseJson => {\n      this.setState({ keywords: responseJson.data });\n      this.setState({ list_kw: true });\n    });\n}\n\nshowCard(id){\n  changeColor(id);\n  fetch(`http://localhost:3001/companies/list/${id}`)\n    .then(response => response.json())\n    .then(responseJson => {\n      this.setState({ company: responseJson.data,\n        card: true,\n        list_kw : false,\n        search : false, });\n    });\n};\n\nbackfunc(id){\n  changeColor(id);\n  this.setState({ card: false,\n    list_kw : true,\n    search : true, })\n}\n\n  render(){\n    return <div className = \"container\">\n    <div class = \"row justify-content-center\">\n      <App />\n    <input type=\"text\"\n    id=\"rechercher\"\n    className=\"input\"\n    placeholder=\"Search...\"\n      />\n    <div onClick={() => this.inputkeyword(document.getElementById(\"rechercher\").value)} className=\"btn btn-primary\">\n    Search\n    </div>\n    </div>\n    <div class = \"row justify-content-center text-center\">\n    {this.state.list_kw ? (\n      <div className=\"list\">\n        <h3> Mots-clés</h3>\n        {this.state.keywords.map(keywords => (\n          <li\n          onClick={() => (document.getElementById(\"rechercher\").value = keywords, this.inputkeyword(keywords))}\n          className=\"btn btn-outline-success\"\n          >\n          {keywords}\n          </li>\n      ))}\n      </div>\n    ): null}\n    </div>\n<div class = \"row justify-content-center\">\n  {this.state.notfound ? (\n    <h5> Aucun résultat </h5>\n  ): null}\n  {this.state.search ? (\n    <div className=\"list-group\">\n      <h5> Résultat de recherche pour {document.getElementById(\"rechercher\").value} </h5>\n      {this.state.companies.map(companies => (\n        <li\n        onClick={() => this.showCard(companies._id)}\n        className=\"list-group-item list-group-item-action\"\n        >\n        {companies.name}\n        </li>\n      ))}\n   </div>\n  ): null}\n  {this.state.card ? (\n  <div class=\"card\" style={{ width: \"18rem\" }}>\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">{this.state.company.name}</h5>\n      <div className=\"list-group\">\n      {this.state.company.keywords.map(kw =>(\n        <li>{kw}</li>\n      )\n      )}\n      </div>\n      <div onClick={() => this.backfunc(this.state.company._id)} class=\"btn btn-primary\">\n        Back\n      </div>\n    </div>\n  </div>\n  ) :null}\n </div>\n </div>\n  }\n}\n\n\nexport default List;"]},"metadata":{},"sourceType":"module"}