{"ast":null,"code":"var _jsxFileName = \"/home/emma/Documents/I2/pfa/free-PFA/react-frontend/src/testbar.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass testbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: [\"Go to the store\", \"Wash the dishes\", \"Learn some code\"]\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      filtered: this.props.items\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      filtered: nextProps.items\n    });\n  }\n\n  handleChange(e) {\n    // Variable to hold the original version of the list\n    let currentList = []; // Variable to hold the filtered list before putting into state\n\n    let newList = []; // If the search bar isn't empty\n\n    if (e.target.value !== \"\") {\n      // Assign the original list to currentList\n      currentList = this.props.items; // Use .filter() to determine which items should be displayed\n      // based on the search terms\n\n      newList = currentList.filter(item => {\n        // change current item to lowercase\n        const lc = item.toLowerCase(); // change search term to lowercase\n\n        const filter = e.target.value.toLowerCase(); // check to see if the current list item includes the search term\n        // If it does, it will be added to newList. Using lowercase eliminates\n        // issues with capitalization in search terms and search content\n\n        return lc.includes(filter);\n      });\n    } else {\n      // If the search bar is empty, set newList to original task list\n      newList = this.props.items;\n    } // Set the filtered state based on what our rules added to newList\n\n\n    this.setState({\n      filtered: newList\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"section\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: this.state.list.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: item\n            }, item, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filtered: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"input\",\n        onChange: this.handleChange,\n        placeholder: \"Search...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: \"...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default List;","map":{"version":3,"sources":["/home/emma/Documents/I2/pfa/free-PFA/react-frontend/src/testbar.js"],"names":["React","Component","testbar","constructor","props","state","list","handleChange","bind","componentDidMount","setState","filtered","items","componentWillReceiveProps","nextProps","e","currentList","newList","target","value","filter","item","lc","toLowerCase","includes","render","map","List"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAC9BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,CACJ,iBADI,EAEJ,iBAFI,EAGJ,iBAHI;AADK,KAAb;AAOA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AACDC,EAAAA,iBAAiB,GAAG;AACpB,SAAKC,QAAL,CAAc;AACZC,MAAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWQ;AADT,KAAd;AAGD;;AAEDC,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACnC,SAAKJ,QAAL,CAAc;AACZC,MAAAA,QAAQ,EAAEG,SAAS,CAACF;AADR,KAAd;AAGD;;AACDL,EAAAA,YAAY,CAACQ,CAAD,EAAI;AACd;AACE,QAAIC,WAAW,GAAG,EAAlB,CAFY,CAGd;;AACE,QAAIC,OAAO,GAAG,EAAd,CAJY,CAMd;;AACE,QAAIF,CAAC,CAACG,MAAF,CAASC,KAAT,KAAmB,EAAvB,EAA2B;AAC5B;AACGH,MAAAA,WAAW,GAAG,KAAKZ,KAAL,CAAWQ,KAAzB,CAFyB,CAI5B;AACA;;AACGK,MAAAA,OAAO,GAAGD,WAAW,CAACI,MAAZ,CAAmBC,IAAI,IAAI;AACvC;AACI,cAAMC,EAAE,GAAGD,IAAI,CAACE,WAAL,EAAX,CAFmC,CAGvC;;AACI,cAAMH,MAAM,GAAGL,CAAC,CAACG,MAAF,CAASC,KAAT,CAAeI,WAAf,EAAf,CAJmC,CAKvC;AACA;AACA;;AACI,eAAOD,EAAE,CAACE,QAAH,CAAYJ,MAAZ,CAAP;AACD,OATS,CAAV;AAUD,KAhBD,MAgBO;AACR;AACGH,MAAAA,OAAO,GAAG,KAAKb,KAAL,CAAWQ,KAArB;AACD,KA1BW,CA2Bd;;;AACE,SAAKF,QAAL,CAAc;AACZC,MAAAA,QAAQ,EAAEM;AADE,KAAd;AAGD;;AACDQ,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACE;AAAS,UAAA,SAAS,EAAC,SAAnB;AAAA,iCACE;AAAA,sBACG,KAAKpB,KAAL,CAAWC,IAAX,CAAgBoB,GAAhB,CAAoBL,IAAI,iBACvB;AAAA,wBAAgBA;AAAhB,eAASA,IAAT;AAAA;AAAA;AAAA;AAAA,oBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AArE6B;;AAuEhC,MAAMM,IAAN,SAAmB3B,KAAK,CAACC,SAAzB,CAAmC;AAEjCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXM,MAAAA,QAAQ,EAAE;AADC,KAAb;AAID;;AACDc,EAAAA,MAAM,GAAE;AACN,wBAAO;AAAA,8BACT;AAAO,QAAA,IAAI,EAAC,MAAZ;AACA,QAAA,SAAS,EAAC,OADV;AAEA,QAAA,QAAQ,EAAE,KAAKlB,YAFf;AAGA,QAAA,WAAW,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,cADS,eAKT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALS;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAOD;;AAjBgC;;AAsBnC,eAAeoB,IAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass testbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: [\n        \"Go to the store\",\n        \"Wash the dishes\",\n        \"Learn some code\"\n      ]\n    }\n    this.handleChange = this.handleChange.bind(this)\n  }\n  componentDidMount() {\n  this.setState({\n    filtered: this.props.items\n  });\n}\n\ncomponentWillReceiveProps(nextProps) {\n  this.setState({\n    filtered: nextProps.items\n  });\n}\nhandleChange(e) {\n\t\t// Variable to hold the original version of the list\n    let currentList = [];\n\t\t// Variable to hold the filtered list before putting into state\n    let newList = [];\n\n\t\t// If the search bar isn't empty\n    if (e.target.value !== \"\") {\n\t\t\t// Assign the original list to currentList\n      currentList = this.props.items;\n\n\t\t\t// Use .filter() to determine which items should be displayed\n\t\t\t// based on the search terms\n      newList = currentList.filter(item => {\n\t\t\t\t// change current item to lowercase\n        const lc = item.toLowerCase();\n\t\t\t\t// change search term to lowercase\n        const filter = e.target.value.toLowerCase();\n\t\t\t\t// check to see if the current list item includes the search term\n\t\t\t\t// If it does, it will be added to newList. Using lowercase eliminates\n\t\t\t\t// issues with capitalization in search terms and search content\n        return lc.includes(filter);\n      });\n    } else {\n\t\t\t// If the search bar is empty, set newList to original task list\n      newList = this.props.items;\n    }\n\t\t// Set the filtered state based on what our rules added to newList\n    this.setState({\n      filtered: newList\n    });\n  }\n  render() {\n    return (\n      <div className=\"content\">\n        <div className=\"container\">\n          <section className=\"section\">\n            <ul>\n              {this.state.list.map(item => (\n                <li key={item}>{item}</li>\n              ))}\n            </ul>\n          </section>\n        </div>\n      </div>\n    )\n  }\n}\nclass List extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      filtered: [],\n    }\n\n  }\n  render(){\n    return <div>\n  <input type=\"text\"\n  className=\"input\"\n  onChange={this.handleChange}\n  placeholder=\"Search...\" />\n  <ul>...</ul>\n</div>\n  }\n}\n\n\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}