{"ast":null,"code":"var _jsxFileName = \"/home/emma/Documents/I2/pfa/free-PFA/react-frontend/src/search.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      companies: [],\n      notfound: false,\n      search: false,\n      keywords: [],\n      list_kw: false,\n      card: false,\n      company: {}\n    };\n    this.kwords();\n  }\n\n  inputkeyword(name) {\n    if (name != \"\") {\n      if (this.state.companies.length == 0) {\n        this.setState({\n          notfound: true\n        });\n      }\n\n      fetch(`http://localhost:3001/companies/list/search/${name}`).then(response => response.json()).then(responseJson => {\n        this.setState({\n          companies: responseJson.data\n        });\n\n        if (this.state.companies.length != 0) {\n          this.setState({\n            notfound: false,\n            search: true\n          });\n        } else {\n          this.setState({\n            notfound: true,\n            search: false\n          });\n        }\n      });\n    }\n  }\n\n  kwords() {\n    fetch(\"http://localhost:3001/companies/keywords\").then(response => response.json()).then(responseJson => {\n      this.setState({\n        keywords: responseJson.data\n      });\n      this.setState({\n        list_kw: true\n      });\n    });\n  }\n\n  showCard(id) {\n    fetch(`http://localhost:3001/companies/list/${id}`).then(response => response.json()).then(responseJson => {\n      this.setState({\n        company: responseJson.data,\n        card: true,\n        list_kw: false,\n        search: false\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"rechercher\",\n        className: \"input\",\n        placeholder: \"Search...\",\n        style: \"width: 200px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => this.inputkeyword(document.getElementById(\"rechercher\").value),\n        className: \"btn btn-primary\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, this), this.state.list_kw ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \" Mots-cl\\xE9s\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this), this.state.keywords.map(keywords => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => (document.getElementById(\"rechercher\").value = keywords, this.inputkeyword(keywords)),\n          className: \"btn btn-outline-success\",\n          children: keywords\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this) : null, this.state.notfound ? /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \" Aucun r\\xE9sultat \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }, this) : null, this.state.search ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\" R\\xE9sultat de recherche pour \", document.getElementById(\"rechercher\").value, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 7\n        }, this), this.state.companies.map(companies => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => this.showCard(companies._id),\n          className: \"list-group-item list-group-item-action\",\n          children: companies.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }, this) : null, this.state.card ? /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"card\",\n        style: {\n          width: \"18rem\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            class: \"card-title\",\n            children: this.state.company.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list-group\",\n            children: this.state.keywords.map(keywords => /*#__PURE__*/_jsxDEV(\"li\", {\n              class: \"list-group\",\n              children: keywords\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 7\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => this.setState({\n              card: false,\n              list_kw: true,\n              search: true\n            }),\n            class: \"btn btn-primary\",\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 3\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default List;","map":{"version":3,"sources":["/home/emma/Documents/I2/pfa/free-PFA/react-frontend/src/search.js"],"names":["React","Component","List","constructor","props","state","companies","notfound","search","keywords","list_kw","card","company","kwords","inputkeyword","name","length","setState","fetch","then","response","json","responseJson","data","showCard","id","render","document","getElementById","value","map","_id","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAIA,MAAMC,IAAN,SAAmBF,KAAK,CAACC,SAAzB,CAAmC;AAEjCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,EADA;AAEXC,MAAAA,QAAQ,EAAC,KAFE;AAGXC,MAAAA,MAAM,EAAE,KAHG;AAIXC,MAAAA,QAAQ,EAAG,EAJA;AAKXC,MAAAA,OAAO,EAAG,KALC;AAMXC,MAAAA,IAAI,EAAG,KANI;AAOXC,MAAAA,OAAO,EAAG;AAPC,KAAb;AASF,SAAKC,MAAL;AACC;;AAIDC,EAAAA,YAAY,CAACC,IAAD,EAAM;AAChB,QAAGA,IAAI,IAAG,EAAV,EAAa;AACX,UAAG,KAAKV,KAAL,CAAWC,SAAX,CAAqBU,MAArB,IAA+B,CAAlC,EAAqC;AACnC,aAAKC,QAAL,CAAc;AACZV,UAAAA,QAAQ,EAAE;AADE,SAAd;AACoB;;AACxBW,MAAAA,KAAK,CAAE,+CAA8CH,IAAK,EAArD,CAAL,CACGI,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,YAAY,IAAI;AACpB,aAAKL,QAAL,CAAc;AAAEX,UAAAA,SAAS,EAAEgB,YAAY,CAACC;AAA1B,SAAd;;AACE,YAAG,KAAKlB,KAAL,CAAWC,SAAX,CAAqBU,MAArB,IAA+B,CAAlC,EAAqC;AACvC,eAAKC,QAAL,CAAc;AAAEV,YAAAA,QAAQ,EAAE,KAAZ;AAAmBC,YAAAA,MAAM,EAAC;AAA1B,WAAd;AAAgD,SAD9C,MAEG;AACH,eAAKS,QAAL,CAAc;AAAEV,YAAAA,QAAQ,EAAE,IAAZ;AAAkBC,YAAAA,MAAM,EAAE;AAA1B,WAAd;AAAiD;AACpD,OARH;AASC;AACF;;AAGDK,EAAAA,MAAM,GAAE;AACNK,IAAAA,KAAK,CAAC,0CAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,YAAY,IAAI;AACpB,WAAKL,QAAL,CAAc;AAAER,QAAAA,QAAQ,EAAEa,YAAY,CAACC;AAAzB,OAAd;AACA,WAAKN,QAAL,CAAc;AAAEP,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KALD;AAMH;;AAEDc,EAAAA,QAAQ,CAACC,EAAD,EAAI;AACVP,IAAAA,KAAK,CAAE,wCAAuCO,EAAG,EAA5C,CAAL,CACGN,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,YAAY,IAAI;AACpB,WAAKL,QAAL,CAAc;AAAEL,QAAAA,OAAO,EAAEU,YAAY,CAACC,IAAxB;AACZZ,QAAAA,IAAI,EAAE,IADM;AAEZD,QAAAA,OAAO,EAAG,KAFE;AAGZF,QAAAA,MAAM,EAAG;AAHG,OAAd;AAID,KAPH;AAQD;;AAECkB,EAAAA,MAAM,GAAE;AACN,wBAAO;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACP;AAAO,QAAA,IAAI,EAAC,MAAZ;AACA,QAAA,EAAE,EAAC,YADH;AAEA,QAAA,SAAS,EAAC,OAFV;AAGA,QAAA,WAAW,EAAC,WAHZ;AAIA,QAAA,KAAK,EAAC;AAJN;AAAA;AAAA;AAAA;AAAA,cADO,eAMP;AAAK,QAAA,OAAO,EAAE,MAAM,KAAKZ,YAAL,CAAkBa,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,KAAxD,CAApB;AAAoF,QAAA,SAAS,EAAC,iBAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANO,EASN,KAAKxB,KAAL,CAAWK,OAAX,gBACC;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEG,KAAKL,KAAL,CAAWI,QAAX,CAAoBqB,GAApB,CAAwBrB,QAAQ,iBAC/B;AACA,UAAA,OAAO,EAAE,OAAOkB,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,KAAtC,GAA8CpB,QAA9C,EAAwD,KAAKK,YAAL,CAAkBL,QAAlB,CAA/D,CADT;AAEA,UAAA,SAAS,EAAC,yBAFV;AAAA,oBAICA;AAJD;AAAA;AAAA;AAAA;AAAA,gBADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,GAYE,IArBI,EAsBR,KAAKJ,KAAL,CAAWE,QAAX,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,GAEE,IAxBM,EAyBR,KAAKF,KAAL,CAAWG,MAAX,gBACC;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAA,wDAAiCmB,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,KAAvE;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEG,KAAKxB,KAAL,CAAWC,SAAX,CAAqBwB,GAArB,CAAyBxB,SAAS,iBACjC;AACA,UAAA,OAAO,EAAE,MAAM,KAAKkB,QAAL,CAAclB,SAAS,CAACyB,GAAxB,CADf;AAEA,UAAA,SAAS,EAAC,wCAFV;AAAA,oBAICzB,SAAS,CAACS;AAJX;AAAA;AAAA;AAAA;AAAA,gBADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,GAYE,IArCM,EAsCR,KAAKV,KAAL,CAAWM,IAAX,gBACD;AAAK,QAAA,KAAK,EAAC,MAAX;AAAkB,QAAA,KAAK,EAAE;AAAEqB,UAAAA,KAAK,EAAE;AAAT,SAAzB;AAAA,+BACE;AAAK,UAAA,KAAK,EAAC,WAAX;AAAA,kCACE;AAAI,YAAA,KAAK,EAAC,YAAV;AAAA,sBAAwB,KAAK3B,KAAL,CAAWO,OAAX,CAAmBG;AAA3C;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,sBACC,KAAKV,KAAL,CAAWI,QAAX,CAAoBqB,GAApB,CAAwBrB,QAAQ,iBACjC;AAAI,cAAA,KAAK,EAAC,YAAV;AAAA,wBAAwBA;AAAxB;AAAA;AAAA;AAAA;AAAA,oBADC;AADD;AAAA;AAAA;AAAA;AAAA,kBAFF,eAME;AAAK,YAAA,OAAO,EAAE,MAAM,KAAKQ,QAAL,CAAc;AAAEN,cAAAA,IAAI,EAAE,KAAR;AAChCD,cAAAA,OAAO,EAAG,IADsB;AAEhCF,cAAAA,MAAM,EAAG;AAFuB,aAAd,CAApB;AAEqB,YAAA,KAAK,EAAC,iBAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADC,GAeG,IArDK;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAuDD;;AAhHgC;;AAmHnC,eAAeN,IAAf","sourcesContent":["import React, { Component } from 'react';\n\n\n\nclass List extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      companies: [],\n      notfound:false,\n      search: false,\n      keywords : [],\n      list_kw : false,\n      card : false, \n      company : {}\n    };        \n  this.kwords()\n  }\n\n\n\n  inputkeyword(name){\n    if(name!= \"\"){\n      if(this.state.companies.length == 0) {\n        this.setState({\n          notfound: true});}\n    fetch(`http://localhost:3001/companies/list/search/${name}`)\n      .then(response => response.json())\n      .then(responseJson => {\n        this.setState({ companies: responseJson.data });\n          if(this.state.companies.length != 0) {\n        this.setState({ notfound: false, search:true});}\n        else {\n          this.setState({ notfound: true, search: false});}\n      });\n    }\n  };\n\n\n  kwords(){\n    fetch(\"http://localhost:3001/companies/keywords\")\n    .then(response => response.json())\n    .then(responseJson => {\n      this.setState({ keywords: responseJson.data });\n      this.setState({ list_kw: true });\n    });\n}\n   \nshowCard(id){\n  fetch(`http://localhost:3001/companies/list/${id}`)\n    .then(response => response.json())\n    .then(responseJson => {\n      this.setState({ company: responseJson.data, \n        card: true,\n        list_kw : false,\n        search : false, });\n    });\n};\n\n  render(){\n    return <div className=\"container\">\n    <input type=\"text\"\n    id=\"rechercher\"\n    className=\"input\"\n    placeholder=\"Search...\" \n    style=\"width: 200px\"/>\n    <div onClick={() => this.inputkeyword(document.getElementById(\"rechercher\").value)} className=\"btn btn-primary\">\n    Search\n    </div>\n    {this.state.list_kw ? (\n      <div className=\"list\">\n        <h3> Mots-clés</h3>\n        {this.state.keywords.map(keywords => (\n          <li\n          onClick={() => (document.getElementById(\"rechercher\").value = keywords, this.inputkeyword(keywords))}\n          className=\"btn btn-outline-success\"\n          >\n          {keywords}  \n          </li>\n      ))} \n      </div>\n    ): null}\n  {this.state.notfound ? (\n    <h5> Aucun résultat </h5>\n  ): null}\n  {this.state.search ? (\n    <div className=\"list-group\">\n      <h5> Résultat de recherche pour {document.getElementById(\"rechercher\").value} </h5> \n      {this.state.companies.map(companies => (\n        <li\n        onClick={() => this.showCard(companies._id)}\n        className=\"list-group-item list-group-item-action\"\n        >\n        {companies.name}\n        </li>\n      ))}\n   </div>\n  ): null}\n  {this.state.card ? (\n  <div class=\"card\" style={{ width: \"18rem\" }}>\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">{this.state.company.name}</h5>\n      <div className=\"list-group\">\n      {this.state.keywords.map(keywords => (\n      <li class=\"list-group\">{keywords}</li>))}\n      </div>\n      <div onClick={() => this.setState({ card: false,\n        list_kw : true,\n        search : true, })} class=\"btn btn-primary\">\n        Back\n      </div>\n    </div>\n  </div>\n  ) : null}\n</div>\n  }\n}\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}